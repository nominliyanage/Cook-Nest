/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/meals/index` | `/meals/index`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/meals/[id]` | `/meals/[id]`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/favourites` | `/favourites`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/notifications` | `/notifications`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/plan` | `/plan`; params?: Router.UnknownInputParams; } | { pathname: `/../context/MealContext`; params?: Router.UnknownInputParams; } | { pathname: `/../context/ThemeContext`; params?: Router.UnknownInputParams; } | { pathname: `/../services/mealService`; params?: Router.UnknownInputParams; } | { pathname: `/../services/initService`; params?: Router.UnknownInputParams; } | { pathname: `/../services/notificationService`; params?: Router.UnknownInputParams; } | { pathname: `/../services/userService`; params?: Router.UnknownInputParams; } | { pathname: `/../types/meal`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/login` | `/login`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/register` | `/register`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/home` | `/home`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/setting` | `/setting`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/tasks` | `/tasks`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/tasks/[id]` | `/tasks/[id]`, params: Router.UnknownInputParams & { id: string | number; } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/meals/index` | `/meals/index`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/meals/[id]` | `/meals/[id]`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/favourites` | `/favourites`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/notifications` | `/notifications`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/plan` | `/plan`; params?: Router.UnknownOutputParams; } | { pathname: `/../context/MealContext`; params?: Router.UnknownOutputParams; } | { pathname: `/../context/ThemeContext`; params?: Router.UnknownOutputParams; } | { pathname: `/../services/mealService`; params?: Router.UnknownOutputParams; } | { pathname: `/../services/initService`; params?: Router.UnknownOutputParams; } | { pathname: `/../services/notificationService`; params?: Router.UnknownOutputParams; } | { pathname: `/../services/userService`; params?: Router.UnknownOutputParams; } | { pathname: `/../types/meal`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(auth)'}/login` | `/login`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(auth)'}/register` | `/register`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/home` | `/home`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/profile` | `/profile`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/setting` | `/setting`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/tasks` | `/tasks`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(dashboard)'}/tasks/[id]` | `/tasks/[id]`, params: Router.UnknownOutputParams & { id: string; } };
      href: Router.RelativePathString | Router.ExternalPathString | `/${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/meals/index${`?${string}` | `#${string}` | ''}` | `/meals/index${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/meals/[id]${`?${string}` | `#${string}` | ''}` | `/meals/[id]${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/favourites${`?${string}` | `#${string}` | ''}` | `/favourites${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/notifications${`?${string}` | `#${string}` | ''}` | `/notifications${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/plan${`?${string}` | `#${string}` | ''}` | `/plan${`?${string}` | `#${string}` | ''}` | `/../context/MealContext${`?${string}` | `#${string}` | ''}` | `/../context/ThemeContext${`?${string}` | `#${string}` | ''}` | `/../services/mealService${`?${string}` | `#${string}` | ''}` | `/../services/initService${`?${string}` | `#${string}` | ''}` | `/../services/notificationService${`?${string}` | `#${string}` | ''}` | `/../services/userService${`?${string}` | `#${string}` | ''}` | `/../types/meal${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(auth)'}/login${`?${string}` | `#${string}` | ''}` | `/login${`?${string}` | `#${string}` | ''}` | `${'/(auth)'}/register${`?${string}` | `#${string}` | ''}` | `/register${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/home${`?${string}` | `#${string}` | ''}` | `/home${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/profile${`?${string}` | `#${string}` | ''}` | `/profile${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/setting${`?${string}` | `#${string}` | ''}` | `/setting${`?${string}` | `#${string}` | ''}` | `${'/(dashboard)'}/tasks${`?${string}` | `#${string}` | ''}` | `/tasks${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/meals/index` | `/meals/index`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/meals/[id]` | `/meals/[id]`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/favourites` | `/favourites`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/notifications` | `/notifications`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/plan` | `/plan`; params?: Router.UnknownInputParams; } | { pathname: `/../context/MealContext`; params?: Router.UnknownInputParams; } | { pathname: `/../context/ThemeContext`; params?: Router.UnknownInputParams; } | { pathname: `/../services/mealService`; params?: Router.UnknownInputParams; } | { pathname: `/../services/initService`; params?: Router.UnknownInputParams; } | { pathname: `/../services/notificationService`; params?: Router.UnknownInputParams; } | { pathname: `/../services/userService`; params?: Router.UnknownInputParams; } | { pathname: `/../types/meal`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/login` | `/login`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/register` | `/register`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/home` | `/home`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/setting` | `/setting`; params?: Router.UnknownInputParams; } | { pathname: `${'/(dashboard)'}/tasks` | `/tasks`; params?: Router.UnknownInputParams; } | `${'/(dashboard)'}/tasks/${Router.SingleRoutePart<T>}${`?${string}` | `#${string}` | ''}` | `/tasks/${Router.SingleRoutePart<T>}${`?${string}` | `#${string}` | ''}` | { pathname: `${'/(dashboard)'}/tasks/[id]` | `/tasks/[id]`, params: Router.UnknownInputParams & { id: string | number; } };
    }
  }
}
